#include<iostream.h>
#include<stdio.h>
#include<conio.h>
#include<graphics.h>
#include<math.h>
class draw{
float dx,dy,i,length;
public:
int x1,y1,x2,y2;
float xmid,ymid;
int xc,yc,r;
void get();
void dda(int x1,int y1,int x2,int y2);
void bcircle(int xc,int yc,int r);
};
void draw::get(){
cout<<"Enter x1,y1="
cin>>x1>>y1;
cout<<"Enter x2,y2=";
cin>>x2>>y2;
}
void draw:: dda(int x1,int y1,int x2,int y2){
float x,y;
dx=(x2-x1);
dy=(y2-y1);
if(abs(dx)>abs(dy))
length=abs(dx);
else
length=abs(dx);
dx=dx/length;
dy=dy/length;
x=x1;
y=y1;
i=1;
while(length>=i){
putpixel(x,y,15);
x=x+dx;
y=y+dy;
i++;
}
}
void draw::bcircle(int xc,int yc,int r){
int x,y,d;
x=0;
y=r;
d=3-2*r;
do{
putpixel(xc+x,yc+y,15);
putpixel(xc+y,yc+x,15);
putpixel(xc-x,yc+y,15);
putpixel(xc-y,yc+x,15);
putpixel(xc-y,yc-x,15);
putpixel(xc-x,yc-y,15);
putpixel(xc+y,yc-x,15);
putpixel(xc+x,yc-y,15);
if(d<0){
d=d+4*xx+6;
y=y;
}
else{
d=d+4*(x-y)+10;
y=y-1;
}
x=x+1;
}while(x<=y);
}

int main(){
clrscr();
int gd=DETECT,gm;
initgraph(&gd,&gm,"C:\\TC\\BGI");
cleardevice();
draw d;
d.get();
d.dda(d.x1,d.y1,d.x2,d.y1);
d.dda(d.x2,d.y1,d.x2,d.y2);
d.dda(d.x2,d.y2,d.x1,d.y2);
d.dda(d.x1,d.y2,d.x1,d.y1);
d.xmid=abs(d.x1+d.x2)/2;
d.ymid=abs(d.y1+d.y2)/2;
d.dda(d.xmid,d.y1,d.x2,d.ymid);
d.dda(d.x2,d.ymid,d.xmid,d.y2);
d.dda(d.xmid,d.y2,d.x1,d.ymid);
d.dda(d.x1,d.ymid,d.xmid,d.y1);
float rad,cal,sidex,sidey;
sidex=abs(d.x2-d.x1);
sidey=abs(d.y2-d.y1);
cal=pow(sidex,2)+pow(sidey,2);
cal=2*sqrt(cal);
rad=(side*sidey)/cal;
cout<<"Centre="<<d.xmid<<","<<d.ymid;
cout<<"Radius="<<rad;
d.bcircle(d.xmid,d.ymid,rad);
gatch();
closegraph();
return 0;
}